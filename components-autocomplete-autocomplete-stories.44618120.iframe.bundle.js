"use strict";(globalThis.webpackChunk_wonderflow_react_components=globalThis.webpackChunk_wonderflow_react_components||[]).push([[7325],{"./src/components/autocomplete/autocomplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Busy:()=>Busy,Default:()=>Default,WithValue:()=>WithValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/react/index.js");var ___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/index.ts"),_autocomplete__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/autocomplete/autocomplete.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/Autocomplete",component:_autocomplete__WEBPACK_IMPORTED_MODULE_2__.F,args:{invalid:!1}};var Template=function(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_autocomplete__WEBPACK_IMPORTED_MODULE_2__.F,Object.assign({onChange:function(value){return console.log(value)},style:{maxWidth:"300px"},icon:"magnifying-glass"},args,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_autocomplete__WEBPACK_IMPORTED_MODULE_2__.F.Option,{value:"apple",children:"Apple"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_autocomplete__WEBPACK_IMPORTED_MODULE_2__.F.Option,{value:"banana",decoration:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Af,{dimension:"small",color:"green",children:"110 Cal"}),children:"Banana"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_autocomplete__WEBPACK_IMPORTED_MODULE_2__.F.Option,{value:"cherry",children:"Cherry"})]})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.aV,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.aV.Li,{children:["Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus non laboriosam facere?"," "]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.aV.Li,{children:"Eum, assumenda ad sunt dolorum aspernatur quia sit! Mollitia eligendi accusantium alias non enim quaerat quidem fugiat architecto."})]})]})},Default=Template.bind({}),BusyTemplate=function(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_autocomplete__WEBPACK_IMPORTED_MODULE_2__.F,Object.assign({onChange:function(value){return console.log(value)},style:{maxWidth:"300px"},icon:"magnifying-glass",busy:!0},args))};BusyTemplate.displayName="BusyTemplate";var Busy=BusyTemplate.bind({}),WithValue=Template.bind({});WithValue.args={value:"1"},Default.parameters=Object.assign({storySource:{source:'args => (\n  <>\n    <Autocomplete\n      onChange={value => console.log(value)}\n      style={{ maxWidth: \'300px\' }}\n      icon="magnifying-glass"\n      {...args}\n    >\n      <Autocomplete.Option value="apple">\n        Apple\n      </Autocomplete.Option>\n      <Autocomplete.Option\n        value="banana"\n        decoration={<Chip dimension="small" color="green">110 Cal</Chip>}\n      >\n        Banana\n      </Autocomplete.Option>\n      <Autocomplete.Option value="cherry">\n        Cherry\n      </Autocomplete.Option>\n    </Autocomplete>\n    <List>\n      <List.Li>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Necessitatibus non laboriosam facere?\n        {\' \'}\n      </List.Li>\n      <List.Li>\n        Eum, assumenda ad sunt dolorum aspernatur quia sit! Mollitia eligendi\n        accusantium alias non enim quaerat quidem fugiat architecto.\n      </List.Li>\n    </List>\n  </>\n)'}},Default.parameters),Busy.parameters=Object.assign({storySource:{source:"args => (\n  <Autocomplete\n    onChange={value => console.log(value)}\n    style={{ maxWidth: '300px' }}\n    icon=\"magnifying-glass\"\n    busy\n    {...args}\n  />\n)"}},Busy.parameters),WithValue.parameters=Object.assign({storySource:{source:'args => (\n  <>\n    <Autocomplete\n      onChange={value => console.log(value)}\n      style={{ maxWidth: \'300px\' }}\n      icon="magnifying-glass"\n      {...args}\n    >\n      <Autocomplete.Option value="apple">\n        Apple\n      </Autocomplete.Option>\n      <Autocomplete.Option\n        value="banana"\n        decoration={<Chip dimension="small" color="green">110 Cal</Chip>}\n      >\n        Banana\n      </Autocomplete.Option>\n      <Autocomplete.Option value="cherry">\n        Cherry\n      </Autocomplete.Option>\n    </Autocomplete>\n    <List>\n      <List.Li>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Necessitatibus non laboriosam facere?\n        {\' \'}\n      </List.Li>\n      <List.Li>\n        Eum, assumenda ad sunt dolorum aspernatur quia sit! Mollitia eligendi\n        accusantium alias non enim quaerat quidem fugiat architecto.\n      </List.Li>\n    </List>\n  </>\n)'}},WithValue.parameters);var __namedExportsOrder=["Default","Busy","WithValue"];try{ComponentMeta.displayName="ComponentMeta",ComponentMeta.__docgenInfo={description:"For the common case where a component's stories are simple components that receives args as props:\n\n```tsx\nexport default { ... } as ComponentMeta<typeof Button>;\n```",displayName:"ComponentMeta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/autocomplete/autocomplete.stories.tsx#ComponentMeta"]={docgenInfo:ComponentMeta.__docgenInfo,name:"ComponentMeta",path:"src/components/autocomplete/autocomplete.stories.tsx#ComponentMeta"})}catch(__react_docgen_typescript_loader_error){}}}]);