@import '../../core/utils/vibrancy.css';

@layer components {
  .InputWrapper {
    display: inline-block;
    line-height: 0;
    cursor: none;

    &:hover {
      cursor: pointer;
    }

    &[data-radio-control='true'] {
      position: absolute;
    }
  }

  .CheckboxInput {
    --w: 24px;
    --h: 24px;

    @mixin vibrancy;

    appearance: none;
    background-color: var(--global-vibrancy-background);
    block-size: var(--h);
    border-radius: token(--radius-4);
    box-shadow: 0 0 0 1px var(--global-background), inset 0 0 0 1px var(--dimmed-2);
    color: var(--global-background);
    cursor: none;
    inline-size: var(--w);
    max-inline-size: var(--w);
    max-block-size: var(--h);
    position: relative;

    &:hover {
      cursor: pointer;
    }

    &::after {
      content: '';
      display: none;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -80%) rotate(-45deg);
      inline-size: 50%;
      block-size: 27%;
      border-left: 2px solid currentcolor;
      border-bottom: 2px solid currentcolor;
    }

    &:active {
      background-color: var(--global-vibrancy-background-hard);
    }

    &:checked,
    &:indeterminate {
      background: var(--dimmed-7);
      box-shadow: 0 0 0 1px var(--global-background), inset 0 0 0 1px transparent;

      &::after {
        display: block;
      }
    }

    &:disabled {
      color: var(--global-disabled-foreground);
      background-color: var(--global-disabled-background);
      cursor: not-allowed;
      box-shadow: none;
    }

    &[data-control-dimension='small'] {
      --w: 16px;
      --h: 16px;
    }

    &:indeterminate::after {
      border-left: 0;
      block-size: 2px;
      transform: translate(-50%, -50%);
    }
  }

  .RadioInput {

    /* stylelint-disable-next-line value-keyword-case */
    composes: CheckboxInput;
    border-radius: 100%;

    &::after {
      border: 0;
      border-radius: 100%;
      transform: translate(-50%, -50%);
      inline-size: 50%;
      block-size: 50%;
      background-color: currentcolor;
    }

    &:disabled {
      box-shadow: none;
    }

    &:indeterminate {
      background-color: var(--global-vibrancy-background);
      box-shadow: 0 0 0 1px var(--global-background), inset 0 0 0 1px var(--dimmed-2);

      &:disabled {
        box-shadow: none;
      }

      &::after {
        block-size: 0%;
      }
    }
  }

  .Toggle {
    --w: 44px;
    --h: 24px;
    --p: 2px;

    /* stylelint-disable-next-line value-keyword-case */
    composes: RadioInput;
    border-radius: 200px;
    color: var(--dimmed-7);

    &:checked {
      color: var(--global-background);
    }

    &:disabled {
      color: var(--global-disabled-foreground);
    }

    &::after {
      inline-size: calc(var(--h) - (var(--p) * 2));
      block-size: calc(var(--h) - (var(--p) * 2));
      transform: none;
      left: var(--p);
      top: var(--p);
      bottom: var(--p);
      display: block;
      transition:
        transform token(--duration-100) token(--easing-standard),
        background-color token(--duration-100) token(--easing-standard);
    }

    &:checked::after {
      display: block;
      transform: translateX(100%);
    }

    &[data-control-dimension='small'] {
      --w: 28px;
      --h: 16px;
    }
  }

  .Label {
    cursor: none;

    &:hover {
      cursor: pointer;
    }

    &[aria-disabled='true'] {
      color: var(--global-disabled-foreground);
      cursor: not-allowed;
    }
  }
}
