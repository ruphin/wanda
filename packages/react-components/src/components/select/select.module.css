@import '../../core/utils/vibrancy.css';

@layer components {
  .Select {
    appearance: none;
    position: relative;
    padding: 0;

    &[data-select-dimension='small'] {
      --field-height: token(--space-24);
      --field-padding: 0.33rem;
      --font-size: token(--wds-font-size-14);
    }

    &[data-select-dimension='regular'] {
      --field-height: calc(token(--space-40) - token(--space-4));
      --field-padding: calc(token(--space-16) - token(--space-2));
      --font-size: token(--wds-font-size-14);
    }

    &[data-select-dimension='big'] {
      --field-height: token(--space-48);
      --field-padding: token(--space-16);
      --font-size: token(--wds-font-size-16);
    }
  }

  .FieldContainer {
    position: relative;
    color: var(--global-vibrancy-foreground);
    border: 1px solid transparent;
    border-radius: 0.25rem;
    inline-size: 100%;

    @nest .Select[aria-disabled='true'] & {
      color: var(--global-disabled-foreground);
    }
  }

  .Field {

    @mixin vibrancy;

    appearance: none;
    background:
      linear-gradient(
        to bottom,
        var(--global-vibrancy-background),
        var(--global-vibrancy-background)
      );
    block-size: var(--field-height);
    border: 1px solid transparent;
    border-radius: token(--radius-4);
    box-sizing: border-box;
    color: inherit;
    display: block;
    font-size: var(--font-size);
    font-family: inherit;
    overflow: hidden;
    margin: 0;
    min-inline-size: 100%;
    padding:
      0
      calc(var(--field-padding) * 3.5)
      0
      var(--field-padding);
    text-overflow: ellipsis;

    &:disabled {
      cursor: not-allowed;
      color: var(--global-disabled-foreground);
      background:
        linear-gradient(
          to bottom,
          var(--global-disabled-background),
          var(--global-disabled-background)
        );
    }

    &[aria-invalid='true'] {
      border: 1px solid var(--highlight-red-foreground);
    }

    & option {
      color: black;
    }

    & optgroup {
      color: initial;
    }

    &[multiple] {
      block-size: auto;
      padding: token(--space-8) token(--space-16) token(--space-8) token(--space-16);
      overflow: auto;

      & option {
        color: currentcolor;
        padding: calc(var(--field-padding) / 2) var(--field-padding);
      }

      & option:checked {
        color: var(--global-background);
        background:
          hsl(token(--color-primary-30))
          linear-gradient(to bottom, hsl(token(--color-primary-30)) 0%, hsl(token(--color-primary-30)) 100%);
        background-color: hsl(token(--color-primary-30));
      }

      & optgroup {
        color: currentcolor;
        margin: 0 0 1rem;
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
      }
    }
  }

  .Icon {
    border-radius: token(--radius-4);
    pointer-events: none;
    position: absolute;
    top: calc(var(--field-height) / 2);
    transform: translateY(-50%);
    right: calc(var(--field-padding) - calc(var(--field-padding) / 3));
  }

  label.Label {
    &[aria-disabled='true'] {
      color: var(--global-disabled-foreground);
      cursor: not-allowed;
    }
  }
}

